#!/bin/bash

have_gpu() {
    if [[ "$(uname -s)" == "Darwin" ]]; then
        system_profiler SPDisplaysDataType | grep -q -i nvidia
        return $?
    elif [[ "$(uname -s)" == "Linux" ]]; then
        if [ -f /proc/bus/pci/devices ] ; then
            grep -q -i nvidia /proc/bus/pci/devices
        elif hash lspci ; then
            lspci | grep -q -i nvidia
        fi
        return $?
    fi
    return 1
}

while (( $# )); do
    case "$1" in
        --gpu)
            DEVICE="--gpu" ;;
        --cpu)
            DEVICE="--cpu" ;;
        --hybrid)
            DEVICE="--hybrid" ;;
        --auto)
            DEVICE="" ;;
        --read-only)
            RO="--read-only" ;;
        *)
            break ;;
    esac
    shift
done

if ! have_gpu ; then
    if [[ "$DEVICE" != "--cpu" ]]; then
        echo "WARNING: no GPUs detected; forcing CPU"
    fi
    DEVICE="--cpu"
fi

if [ ! -d data ]; then
    mkdir data
    ./bin/initdb -f --path data
    echo "Download and insert sample data? Y/n"
    read choice
    if [ -z "$choice" ]; then choice="Y"; fi
    case $choice in
        [yY]* )
            DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
            . "$DIR/insert_sample_data" ;;
    esac
fi

if ! pgrep mapd_server; then
    ./bin/mapd_server data $DEVICE $RO &
fi

if [ -d frontend -a -e ./bin/mapd_web_server ]; then
    trap 'kill -TERM $WEBPID' TERM INT
    PORT=9092 ./bin/mapd_web_server $RO &
    WEBPID=$!

    MAPDFRONTEND="http://localhost:9092"
    if [ ! -z "$MAPDDASH" ]; then
        MAPDFRONTEND="$MAPDFRONTEND/?style=light-style&platform=mapd&host=localhost&port=9092&db=mapd&$MAPDDASH"
    fi
    if hash open 2>/dev/null; then
        open "$MAPDFRONTEND"
    elif hash xdg-open 2>/dev/null; then
        xdg-open "$MAPDFRONTEND"
    else
        echo "Navigate to: $MAPDFRONTEND"
    fi
    wait $WEBPID
    trap - TERM INT
    wait $WEBPID
fi
