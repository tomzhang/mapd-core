#!/bin/bash

set -e

trap 'trap - SIGTERM && kill -- -$$' SIGINT SIGTERM EXIT

MAPD_TCP_PORT=${MAPD_TCP_PORT:=9091}
MAPD_HTTP_PORT=${MAPD_HTTP_PORT:=9090}
MAPD_WEB_PORT=${MAPD_WEB_PORT:=9092}

MAPD_DATA=${MAPD_DATA:="data"}

have_gpu() {
    if [[ "$(uname -s)" == "Darwin" ]]; then
        system_profiler SPDisplaysDataType | grep -q -i nvidia
        return $?
    elif [[ "$(uname -s)" == "Linux" ]]; then
        if [ -f /proc/bus/pci/devices ] ; then
            grep -q -i nvidia /proc/bus/pci/devices
        elif hash lspci ; then
            lspci | grep -q -i nvidia
        fi
        return $?
    fi
    return 1
}

while (( $# )); do
    case "$1" in
        --gpu)
            DEVICE="--gpu" ;;
        --cpu)
            DEVICE="--cpu" ;;
        --hybrid)
            DEVICE="--hybrid" ;;
        --auto)
            DEVICE="" ;;
        --read-only)
            RO="--read-only" ;;
        --base-port)
            shift
            MAPD_WEB_PORT=$1
            MAPD_TCP_PORT=$(($MAPD_WEB_PORT-1))
            MAPD_HTTP_PORT=$(($MAPD_WEB_PORT-2))
            ;;
        --data)
            shift
            MAPD_DATA=$1
            ;;
        *)
            break ;;
    esac
    shift
done

echo "Backend TCP:  localhost:${MAPD_TCP_PORT}"
echo "Backend HTTP: localhost:${MAPD_HTTP_PORT}"
echo "Frontend Web: localhost:${MAPD_WEB_PORT}"

if ! have_gpu ; then
    if [[ "$DEVICE" != "--cpu" ]]; then
        echo "WARNING: no GPUs detected; forcing CPU"
    fi
    DEVICE="--cpu"
fi

if [ ! -d $MAPD_DATA/mapd_data ]; then
    mkdir -p $MAPD_DATA
    ./bin/initdb -f --path $MAPD_DATA
    echo "Download and insert sample data? Y/n"
    read choice
    if [ -z "$choice" ]; then choice="Y"; fi
    case $choice in
        [yY]* )
            INSERT_SAMPLE_DATA=true;;
    esac
fi

./bin/mapd_server $MAPD_DATA $DEVICE $RO --port $MAPD_TCP_PORT --http-port $MAPD_HTTP_PORT $* &
MAPDPID=$!

if [ "$INSERT_SAMPLE_DATA" = true ]; then
    echo "- mapd_server started"
    echo "- sleeping for 5s while server starts"
    sleep 5

    DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
    . "$DIR/insert_sample_data"
fi

if [ -d frontend -a -e ./bin/mapd_web_server ]; then
    ./bin/mapd_web_server $RO --port $MAPD_WEB_PORT --backend-url "http://localhost:${MAPD_HTTP_PORT}" --data $MAPD_DATA &

    MAPDFRONTEND="http://localhost:${MAPD_WEB_PORT}"
    if [ ! -z "$MAPDDASH" ]; then
        MAPDFRONTEND="${MAPDFRONTEND}/?style=light-style&platform=mapd&host=localhost&port=${MAPD_WEB_PORT}&db=mapd&${MAPDDASH}"
    fi
    if hash open 2>/dev/null; then
        open "$MAPDFRONTEND" 2> /dev/null || true
    elif hash xdg-open 2>/dev/null; then
        xdg-open "$MAPDFRONTEND" 2> /dev/null || true
    else
        echo "Navigate to: $MAPDFRONTEND"
    fi
fi

wait $MAPDPID
